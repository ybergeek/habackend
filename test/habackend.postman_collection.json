{
	"info": {
		"_postman_id": "276e1ea5-8d56-4f3c-84af-077ced1b1877",
		"name": "Habackend Rust Rocket",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Signup",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f5a8c45c-8e35-417d-900f-202930b26d05",
						"type": "text/javascript",
						"exec": [
							"tests['should have status 200'] = pm.response.code === 200;",
							"res = pm.response.json();",
							"console.log(res);",
							"tests['should have user field'] = typeof(res.user) === 'object';",
							"var user = res.user;",
							"",
							"var expectedUserFields = ['email', 'token', 'username', 'bio', 'image'];",
							"expectedUserFields.forEach(function(key) {",
							"    tests[`user should have ${key} field`] = (typeof(user[key]) !== 'undefined');",
							"});",
							"tests['should have correct email'] = user.email == 'basicuser@mail.com';",
							"tests['should have correct username'] = user.username == 'basicuser';",
							"",
							"wait(2000);",
							"",
							"function wait(ms){",
							"   var start = new Date().getTime();",
							"   var end = start;",
							"   while(end < start + ms) {",
							"     end = new Date().getTime();",
							"  }",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"user\": {\n    \"username\": \"basicuser\",\n    \"email\": \"basicuser@mail.com\",\n    \"password\": \"password\"\n  }\n}"
				},
				"url": {
					"raw": "{{apiUrl}}/users",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Signup Another User",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests['should have status 200'] = pm.response.code === 200;",
							"res = pm.response.json();",
							"console.log(res);",
							"tests['should have user field'] = typeof(res.user) === 'object';",
							"var user = res.user;",
							"",
							"var expectedUserFields = ['email', 'token', 'username', 'bio', 'image'];",
							"expectedUserFields.forEach(function(key) {",
							"    tests[`user should have ${key} field`] = (typeof(user[key]) !== 'undefined');",
							"});",
							"tests['should have correct email'] = user.email == 'celebuser@mail.com';",
							"tests['should have correct username'] = user.username == 'celebuser';",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"user\": {\n    \"username\": \"celebuser\",\n    \"email\": \"celebuser@mail.com\",\n    \"password\": \"password\"\n  }\n}"
				},
				"url": {
					"raw": "{{apiUrl}}/users",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests['should have status 200'] = pm.response.code === 200;",
							"res = pm.response.json();",
							"console.log(res);",
							"tests['should have user field'] = typeof(res.user) === 'object';",
							"var user = res.user;",
							"",
							"var expectedUserFields = ['email', 'token', 'username', 'bio', 'image'];",
							"expectedUserFields.forEach(function(key) {",
							"    tests[`user should have ${key} field`] = (typeof(user[key]) !== 'undefined');",
							"});",
							"tests['should have correct email'] = user.email == 'basicuser@mail.com';",
							"tests['should have correct username'] = user.username == 'basicuser';",
							"",
							"pm.globals.unset('authToken');",
							"pm.globals.set('authToken', user.token);",
							"tests['global variable token should be set'] = pm.globals.get('authToken');",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"user\": {\n    \"email\": \"basicuser@mail.com\",\n    \"password\": \"password\"\n  }\n}"
				},
				"url": {
					"raw": "{{apiUrl}}/users/login",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authenticate",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests['should have status 200'] = pm.response.code === 200;",
							"res = pm.response.json();",
							"console.log(res);",
							"tests['should have user field'] = typeof(res.user) === 'object';",
							"var user = res.user;",
							"",
							"var expectedUserFields = ['email', 'token', 'username', 'bio', 'image'];",
							"expectedUserFields.forEach(function(key) {",
							"    tests[`user should have ${key} field`] = (typeof(user[key]) !== 'undefined');",
							"});",
							"tests['should have correct email'] = user.email == 'basicuser@mail.com';",
							"tests['should have correct username'] = user.username == 'basicuser';",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Token {{authToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{apiUrl}}/user",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests['should have status 200'] = pm.response.code === 200;",
							"res = pm.response.json();",
							"console.log(res);",
							"tests['should have user field'] = typeof(res.user) === 'object';",
							"var user = res.user;",
							"",
							"var expectedUserFields = ['email', 'token', 'username', 'bio', 'image'];",
							"expectedUserFields.forEach(function(key) {",
							"    tests[`user should have ${key} field`] = (typeof(user[key]) !== 'undefined');",
							"});",
							"tests['should have correct email'] = user.email == 'newemail@mail.com';",
							"tests['should have correct username'] = user.username == 'basicuser';",
							""
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Token {{authToken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"user\": {\n    \"email\": \"newemail@mail.com\"\n  }\n}"
				},
				"url": {
					"raw": "{{apiUrl}}/user",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8ec92a62-198f-4d18-87b5-f7b61fa11564",
						"exec": [
							"tests['should have status 404'] = pm.response.code === 404;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{apiUrl}}/nopez",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"nopez"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Tags",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests['should have status 200'] = pm.response.code === 200;",
							"res = pm.response.json();",
							"var tags = res.tags;",
							"tests['should have tags field'] = typeof(tags) !== 'undefined';",
							"tests['tags should be an array'] = Array.isArray(tags);",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{apiUrl}}/tags",
					"host": [
						"{{apiUrl}}"
					],
					"path": [
						"tags"
					]
				}
			},
			"response": []
		}
	]
}
